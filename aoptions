#!/bin/bash
TOOLKIT_LOCATION=$(dirname "$0")
source $TOOLKIT_LOCATION/common_tools
android_choose_device

LOCAL_SETTINGS_LIST_PATH=$TOOLKIT_LOCATION/toolkit_intent_list.txt

import_intents(){
  echo "‚è≥ Importing settings activity list..."
  ANDROID_TOOLS_SETTINGS_INTENT_LIST_PATH=$(find ~/Library/Android/sdk -name 'activity_actions.txt' | sort | tail -1)
  cat $ANDROID_TOOLS_SETTINGS_INTENT_LIST_PATH | grep -i android.settings >> $LOCAL_SETTINGS_LIST_PATH # List settings intents
  cat $ANDROID_TOOLS_SETTINGS_INTENT_LIST_PATH | grep -i -e android.net.wifi.PICK_WIFI_NETWORK -e android.os.storage.action.MANAGE_STORAGE -e android.intent.action.MANAGE_PERMISSIONS -e android.intent.action.SET_WALLPAPER -e android.intent.action.VIEW_DOWNLOADS >> $LOCAL_SETTINGS_LIST_PATH # List alternate settings intents
  cat $ANDROID_TOOLS_SETTINGS_INTENT_LIST_PATH | grep -i android.media.action >> $LOCAL_SETTINGS_LIST_PATH # List media intents
  echo "‚úÖ Importing from $ANDROID_TOOLS_SETTINGS_INTENT_LIST_PATH completed successfully"
}

start_settings_intent(){
  SETTINGS_INTENT=$(sed $LINE!d $LOCAL_SETTINGS_LIST_PATH)
  echo "üöÄ Starting $SETTINGS_INTENT"
  adb -s $SELECTED_DEVICE shell am start -a $SETTINGS_INTENT | grep error
}

search_for_intent(){
  cat $LOCAL_SETTINGS_LIST_PATH | nl | grep -i "$1"
  if [[ $? -eq 0 ]]; then
    read -p "üìù Choose option number: " LINE
    start_settings_intent
  else
    read -p "ü§∑‚Äç No \"$1\" intent found, try again or leave blank: " KEYWORD
    search_for_intent $KEYWORD
  fi
}

handle_preset(){
  case "$1" in
    "A")
    echo "üöÄ Launching system settings app root activity..."
    adb -s $SELECTED_DEVICE shell am start -a android.settings.SETTINGS &> /dev/null
    ;;

    "1")
    echo "üî® Opening developer settings..."
    adb -s $SELECTED_DEVICE shell am start -a android.settings.APPLICATION_DEVELOPMENT_SETTINGS &> /dev/null
    ;;

    "2")
    echo "üåç Opening locale settings..."
    adb -s $SELECTED_DEVICE shell am start -a android.settings.LOCALE_SETTINGS &> /dev/null
    ;;

    "4")
    echo "üåê Opening WIFI network settings..."
    adb -s $SELECTED_DEVICE shell am start -a android.net.wifi.PICK_WIFI_NETWORK &> /dev/null
    ;;

    "5")
    echo "üì¶ Opening storage management ..."
    adb -s $SELECTED_DEVICE shell am start -a android.os.storage.action.MANAGE_STORAGE &> /dev/null
    ;;

    "6")
    echo "üîã Opening power usage statistics..."
    adb -s $SELECTED_DEVICE shell am start -a android.intent.action.POWER_USAGE_SUMMARY &> /dev/null
    ;;

    "3")
    echo "üìÖ Opening date &¬†time settings..."
    adb -s $SELECTED_DEVICE shell am start -a android.settings.DATE_SETTINGS &> /dev/null
    ;;

    "0")
    echo "üìú Available settings activities:"
    cat $LOCAL_SETTINGS_LIST_PATH | nl
    read -p "üìù Choose option number: " LINE
    start_settings_intent
    ;;

    "R")
    rm $LOCAL_SETTINGS_LIST_PATH
    import_intents
    ;;

    *)
    search_for_intent $1

    ;;
  esac
}

# Initialize available intent list - inspiration here https://stackoverflow.com/questions/8971160/what-is-the-exhaustive-list-of-all-android-intent-action-actions-available-in
if [ ! -f "$LOCAL_SETTINGS_LIST_PATH" ]; then
    echo "‚ú® Activity list not initialized yet"
    import_intents
fi

# If arugment not passed, show preset chooser
if [[ "$1" == "" ]]; then
  TOOLKIT_INTENT_COUNT=$(cat $LOCAL_SETTINGS_LIST_PATH | wc -l)
  TOOLKIT_INTENT_COUNT=`echo $TOOLKIT_INTENT_COUNT | awk '{print $1}'` # Remove ghost whitespaces üôÉ

  echo -e "üìã Available options:\n0) Show all $TOOLKIT_INTENT_COUNT settings options\n1) Developer\n2) Locale\n3) Date & time\n4) Wifi network\n5) Storage management\n6) Power usage\nA) Open system settings application\nR) Update intent list from Android sdk folder\nor\n<text> to search in all intents"
  read -p "üìù Enter your selection: " PRESET
  handle_preset $PRESET
  exit
fi

# If number argument passed, choose preset right away
if [[ "$1" =~ ^[0-9]+$ ]]; then
  handle_preset $1
  exit
fi

# If string argument passed, search in available all intents
if [[ "$1" != "" ]]; then
  search_for_intent $1
  exit
fi
