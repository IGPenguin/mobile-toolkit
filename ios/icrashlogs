#!/bin/bash
LOCATION=$(dirname "$0")
source "$LOCATION"/../common_tools
ios_choose_device

create_folder(){
  DIRNAME=CRASH_LOGS_$SELECTED_DEVICE_MODEL-iOS$SELECTED_DEVICE_VERSION-$(date +%Y-%m-%d-%H-%M-%S)
  FULL_PATH="$HOME/Desktop/$DIRNAME"
  cd ~/Desktop || exit 1
  mkdir "$DIRNAME"
}

move_crashlogs(){
  echo "‚è≥ Moving crash logs to \"~/Desktop\", this may take a while..."
  idevicecrashreport -u "$SELECTED_DEVICE" "$DIRNAME" &> /dev/null
}

copy_crashlogs(){
  echo "‚è≥ Copying crash logs to \"~/Desktop\", this may take a while..."
  idevicecrashreport -k -u "$SELECTED_DEVICE" "$DIRNAME" &> /dev/null
}

remove_unrelevant_logs(){
  echo "üî• Removing unrelevant system logs..."
  cd "$DIRNAME" || exit 1
  rm -R -- */ #remove unnecessary system logs
  find . -type f ! -name '*.ips' -delete #remove non-crash logs
}

rename_logs_to_ips(){
  # Make the logs importable to Xcode
  for file in *.ips; do
      mv "$file" "$(basename "$file" .ips).crash" &> /dev/null
  done
}

report_sucess_or_remove_folder(){
  if [ -z "$(ls -A)" ]; then
     cd ..
     rm -rf "$DIRNAME"
     echo "‚ùå No crash logs found!"
  else
     echo "‚úÖ Crash logs saved to $DIRNAME"
  fi
}

create_folder

if [[ "$1" == "-r" ]]; then
  move_crashlogs
elif [[ "$1" == "-k" ]]; then
  copy_crashlogs
else
  yes_or_no "üî• Keep the logs in the device storage?"
  if [[ "$RESPONSE" == "n" ||  "$RESPONSE" == "N" ]]; then
    move_crashlogs
  else
    copy_crashlogs
  fi
fi

remove_unrelevant_logs
rename_logs_to_ips
report_sucess_or_remove_folder
