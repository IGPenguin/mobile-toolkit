#!/bin/bash
trap "kill 0" SIGINT # Kill all spawned subprocesses on ctrl^c
LOCATION=$(dirname "$0")
source "$LOCATION"/../common_tools

install_app(){
  echo "⌛️ Installing \"$BUNDLE_ID\" to $1..."
  ideviceinstaller -u "$1" -i "$2" &> /dev/null || { echo "❌ Installation to $1 failed!"; echo "🤕 Uninstall the existing version or troubleshoot the package!"; exit 1; }
  EXIT_CODE=$?
  if [ $EXIT_CODE == 0 ]; then
    echo "🚀 Launching $BUNDLE_ID on $1..."
    idevicedebug -u "$1" --detach run $BUNDLE_ID
  fi
}

check_args_valid(){
  if [[ "$1" != "-a" ]]; then
    FILE=$1
  else
    FILE=$2
  fi

  if [ ! -f "$PWD/$FILE" ] && [ ! -f "$FILE" ]; then
      abort "🤷 Installation file not found!"
  fi

  if [[ "$FILE" != *".ipa" ]]; then
      abort "🤷 Unsupported file!"
  fi
}

get_bundle_id(){
  echo "🔍 Detecting bundle ID..."
  unzip "$PWD/$FILE" &> /dev/null
  APP_FILENAME=$(ls $PWD/Payload)
  BUNDLE_ID=$(grep "$PWD/Payload/$APP_FILENAME/embedded.mobileprovision" -a -e "[.]com[.]" | sed 's/.[^.]*\.//' | sed 's/\<.*$//')
  if [[ "$BUNDLE_ID" == "" ]]; then # Fallback for bundle identifiers containing "app" instead of "com"
    BUNDLE_ID=$(grep "$PWD/Payload/$APP_FILENAME/embedded.mobileprovision" -a -e "[.]app[.]" | sed 's/.[^.]*\.//' | sed 's/\<.*$//')
  fi
  rm -rf "$PWD/Payload"
}

run(){
  if [[ $1 == "-a" ]]; then
    check_for_update
    ios_get_devices
    for ID in "${IOS_USB_DEVICES[@]}"
     do
      install_app "$ID" "$2" &
    done
    wait
  else
    ios_choose_device
    install_app "$SELECTED_DEVICE" "$1"
  fi
}

check_dependency "ideviceinstaller"
check_args_valid "$@"
get_bundle_id "$@"
run "$@"
