#!/bin/bash
LOCATION=$(dirname "$0")
source "$LOCATION"/../common_tools
IOS_DEVICES_LIST=$LOCATION/../data/toolkit_recordable_ios_devices.txt
trap 'ctrlc $@' 1 2 3 6 15

RECORDING=false
cd ~/Desktop || exit

ctrlc(){
  if $RECORDING ; then
    compress_video "$FILENAME"
    echo "âœ… Saved into ~/Desktop/$FILENAME"
  fi
  osascript -e 'quit app "QuickTime Player"'
  exit
}

check_videosnap_dependency(){ #TODO refactor when videosnap available via Homberew
  if ! [ -x "$(command -v "videosnap")" ]; then
    echo "ðŸ’¥ \"videosnap\" command required!"
    should_proceed "ðŸ›’ Install via GitHub? (download and run \"videosnap-0.0.6.pkg\")"
    open "https://github.com/matthutchinson/videosnap/releases"
    exit 1
  fi
}

start_quicktime(){
	echo "ðŸŽ¬ Initializing QuickTime (webcam LED might turn on)..."
	osascript <<EOD
	tell application "QuickTime Player"
		set newMovieRecording to new movie recording
		set miniaturized of window 1 to true
	end tell
EOD
}

pick_recording_device(){
  ios_choose_device
  DEVICE_NAME=$(idevicename -u "$SELECTED_DEVICE")
}

start_recording(){
  RECORDING=true
  FILENAME="$MANUFACTURER-$MODEL-iOS$VERSION-$(date +%Y-%m-%d-%H-%M-%S).mp4"
  echo "ðŸ“¹ Recording screen on $SELECTED_DEVICE ($DEVICE_NAME), stop it using ctrl^c"
  videosnap -w 0 --no-audio -p High -d "$DEVICE_NAME" "$FILENAME" &> /dev/null
}

compress_video(){
  echo "ðŸ“¦ Compressing video..."
  ffmpeg -i "$1" "LQ-$1" -hide_banner -loglevel error #ultra basic ffmpeg compression
  rm "$1" && mv "LQ-$1" "$1"
}

check_videosnap_dependency
check_dependency "ffmpeg"

start_quicktime
pick_recording_device
start_recording
