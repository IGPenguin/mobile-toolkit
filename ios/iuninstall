#!/bin/bash
LOCATION=$(dirname "$0")
source $LOCATION/../common_tools
ios_choose_device

init(){
  UNINSTALL_COUNT=0
  IGNORED_PACKAGES=( "com.apple.TestFlight" "com.thefuntasty.funtaster.beta" "motif.FramerPreview" "com.figma.FigmaMirror" "com.invisionapp.InVisionApp-iOS")
}

ios_get_package_list(){
  echo "‚è≥ Getting third-party package list..."
  PACKAGE_LIST=()
  ALL_INFO_LIST=($(ideviceinstaller -u $SELECTED_DEVICE -l -o list_user | tail -n +2 | sed -e 's/.*=//' | sort))

  for PACKAGE in "${ALL_INFO_LIST[@]}" #remove redundant information
    do
      echo "$PACKAGE" | grep -q '"'
      EXIT_CODE=$?

      if [ $EXIT_CODE -ne 0 ]; then
        PACKAGE=${PACKAGE%,*}
        PACKAGE_LIST+=($PACKAGE)
      fi
    done

  if [ ${#PACKAGE_LIST[@]} -eq 0 ]; then
    echo "ü§∑‚Äç No packages installed."
    exit
  fi
}

filter_packages(){
  PACKAGES_LISTED=()
  for PKG in "${PACKAGE_LIST[@]}" #removes trailing \r
  do
    PKG=${PKG%$'\r'}
    echo ${IGNORED_PACKAGES[*]} | grep -w "$PKG" &> /dev/null && { echo "‚è© Skipped \"$PKG\""; continue; }
    PACKAGES_LISTED+=($PKG)
  done

  if [ ${#PACKAGES_LISTED[@]} -eq 0 ]; then
      echo "ü§∑‚Äç Nothing to uninstall"
      exit
  fi
}

select_option(){
  echo "üìã Choose package number:"
  select OPTION in "${PACKAGES_LISTED[@]}"
  do
   case $OPTION in
      *) PACKAGE=$OPTION;break; ;;
    esac
  done
  if [[ -z $PACKAGE ]]; then
    echo "‚ùå Invalid option picked, retry"
    select_option
  fi
}

uninstall_package(){
  PACKAGE="$1"
  echo ${PACKAGE_LIST[*]} | grep -w "$PACKAGE" &> /dev/null || { echo "ü§∑‚Äç Package \"$PACKAGE\" not installed"; return 1; }
  echo ${IGNORED_PACKAGES[*]} | grep -w "$PACKAGE" &> /dev/null && { echo "‚ùå Package \"$PACKAGE\" is whitelisted"; return 1; }

  echo "üî• Uninstalling \"$PACKAGE\""
  ideviceinstaller -u $SELECTED_DEVICE -U $PKG &> /dev/null
  return 0
}

handle_arguments(){
  if [[  "$1" == "-a" ]]; then
    tput setaf 1
    should_proceed "üí£ Delete all third-party apps on $SELECTED_DEVICE_MODEL - $SELECTED_DEVICE?"
    tput sgr0
    for PKG in "${PACKAGE_LIST[@]}"
    do
      uninstall_package $PKG
      if [ "$?" -eq 0 ]; then
        ((++UNINSTALL_COUNT))
      fi
    done
    echo "‚úÖ Apps uninstalled: $UNINSTALL_COUNT"
    exit
  elif [[ -n "$1" ]]; then
    uninstall_package $1
  fi

  if [ -z "$1" ]; then
    if [ ${#PACKAGE_LIST[@]} -eq 0 ]; then
        echo "ü§∑‚Äç Nothing to uninstall"
        exit
    fi
    select_option
    uninstall_package $PACKAGE
  fi
}

init
ios_get_package_list
filter_packages
handle_arguments "$@"
echo "‚úÖ Done"
