#!/bin/bash
android_choose_device() {
#Populate array with device ids
DEVICES=()
for LINE in `adb devices | grep -v "List"  | awk '{print $1}'`
do
  DEVICE=`echo $LINE | awk '{print $1}'`
  DEVICES+=("$DEVICE")
done

#No device connected
if [ ${#DEVICES[@]} -eq 0 ]
then
   echo No device connected, aborting...
   exit
fi

#Gather device info and choose device
if [ ${#DEVICES[@]} -gt 1 ]
then
   NUMBER=1
   echo Multiple devices available:
   for ID in "${DEVICES[@]}"
    do
      MANUFACTURER=$(adb -s $ID shell getprop ro.product.manufacturer | tr -cd '[[:alnum:]]._-')
      MODEL=$(adb -s $ID shell getprop ro.product.device | tr -cd '[[:alnum:]]._-')
      VERSION=$(adb -s $ID shell getprop ro.build.version.release | tr -cd '[[:alnum:]]._-')
      SDK=$(adb -s $ID shell getprop ro.build.version.sdk | tr -cd '[[:alnum:]]._-')
      INFO=$(printf "%s)\n%s\n%s\n%s\n(API %s)\n-\n%s" "$NUMBER" "$MANUFACTURER" "$MODEL" "$VERSION" "$SDK" "$ID")
      echo $INFO
      ((NUMBER++))
    done

    read -p "Select a device: " CHOICE
    while :;
    do
    if ((CHOICE <= 0 || CHOICE > ${#DEVICES[@]})); then
      echo -en "\033[1A\033[2K"
      read -p "Invalid input, try again: " CHOICE
    else
      break
    fi
    done
    SELECTED_DEVICE=${DEVICES[(($CHOICE-1))]}
else
   SELECTED_DEVICE="${DEVICES[0]}"
fi

SELECTED_DEVICE_MODEL=$(adb -s $SELECTED_DEVICE shell getprop ro.product.model | tr -cd '[[:alnum:]]._-')
SELECTED_DEVICE_SDK=$(adb -s $SELECTED_DEVICE shell getprop ro.build.version.sdk | tr -cd '[[:alnum:]]._-')
}

ios_check_developer_image(){
  IS_MOUNTED=$(ideviceimagemounter -l)
  if [ ${#IS_MOUNTED} -eq 0 ] ; then
    read -r -p "Developer image probably not mounted, do you want to launch Xcode? [y/n] " RESPONSE
    case "$RESPONSE" in
        [yY])
            ;;
        *)
            exit
            ;;
    esac
    open -a Xcode
  fi
}

ios_get_device_info(){
  SELECTED_DEVICE_MODEL=$(ideviceinfo | grep "HardwareModel" | cut -d\   -f2)
  SELECTED_DEVICE_VERSION=$(ideviceinfo | grep "ProductVersion" | cut -d\   -f2)
}
