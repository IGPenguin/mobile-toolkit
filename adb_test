#!/bin/bash

#nice intro
ver="1.5"
echo
echo "Android APP stress test "$ver
echo "---------------------------"

#get app package name
app=$(adb shell dumpsys window windows | grep mCurrentFocus | cut -d'/' -f1 | rev | cut -d' ' -f1 | rev)
echo "Package name: "$app

#check if display is on with suitable app
if ! ([[ $app == *"com"* ]] || [[ $app == *"cz"* ]] || [[ $app == *"ticktackform"* ]]) ; then
   echo "No suitable app in foreground!";
   echo "Unlock your phone and open APP you want to test.";
   echo "Aborting...";
   echo
   exit
fi

#make folder if it doesnt exist
if ! [ -d $app ] ; then
   mkdir ~/Desktop/$app
fi

#check/set number input events
events=0
if [ -z "$1" ] || (( $1<1 )); then
   while [ -z "$events" ] || [ $events -le 0 ]  ; do
      echo -n "Please specify number of input events: ";
      read events;
   done
else
   echo "Input events incoming: "$1;
   events=$1;
fi

#set seed
if ! [ -z "$2" ]; then
   echo "Seed set to: "$2;
   seed=$2
else
   seed=$RANDOM
   echo "Seed not specified! Setting random: "$seed
   echo 'Use "adb_stresstest x y" where y>0 to set seed.' 
fi

#checks passed
logname="$app-`date +%Y-%m-%d-%H-%M-%S`.log"

#create log
echo "Android APP stress test "$ver >> ~/Desktop/$app/$logname
echo "Test with seed "$seed "and "$events" input events started at: `date +%Y-%m-%d-%H-%M-%S`" >> ~/Desktop/$app/$logname
echo "---------------------------" >> ~/Desktop/$app/$logname


#lock screen
task_id=$(adb shell dumpsys activity | grep mFocusedActivity | rev) #get focused activity info and reverse it
set $task_id #breaks task_id into $1 $2 ...
task_id=$1 #saves $1 into task_id
task_id=$(echo $task_id | rev) # reverse string back
task_id=${task_id//[!0-9]/} #strip non numeric chars from task_id

#api specific locking
api=$(adb shell getprop ro.build.version.sdk);
api=${api//[!0-9]/}
if [[ $api -eq 23 ]] ; then #android 6
   adb shell am task lock $task_id >/dev/null 2>&1 #lock current app to prevent monkey escape
   adb shell input tap 865 1620 #ugly hardcoded tap, substitute by (x,y) of your confirm button
elif [[ $api -eq 22 ]] ; then #android 5.1
   adb shell am lock-task $task_id >/dev/null 2>&1 #lock current app to prevent monkey escape
   adb shell input tap 865 1620 #ugly hardcoded tap, substitute by (x,y) of your confirm button
elif [[ $api -eq 21 ]] ; then #android 5 
   adb shell am lock-task $task_id >/dev/null 2>&1 #lock current app to prevent monkey escape
   adb shell input keyevent 22
   adb shell input keyevent 22
   adb shell input keyevent 66
else
   echo "Sorry this script supports only API 21+"
   echo "Aborting..."
   echo
   exit
fi

echo "App locked to screen."

#run test
echo "Testing..."
adb shell monkey -p $app -s $seed --pct-syskeys 0 --pct-anyevent 0 --monitor-native-crashes $events >> ~/Desktop/$app/$logname

#api specific unlocking
if [[ $api -eq 23 ]] ; then #android 6
   adb shell am task lock stop >/dev/null 2>&1
   echo "App unlocked from screen."
elif [[ $api -eq 22 || $api -eq 21 ]] ; then #android 5 and 5.1
   #NO UNLOCK FOR android<6.0
   echo "No app unlock for API 21 and 22 for now."
   echo "Unlock app by holding BACK and RECENTS buttons."
fi



echo "---------------------------"

#check test result
if grep -q "CRASH" ~/Desktop/$app/$logname ; then

   echo ' __    __
 \ \  / /
  \ \/ /   
   |  |    App crashed, test failed!
  / /\ \ 
 /_/  \_\
'
   echo "---------------------------" >> ~/Desktop/$app/$logname
   echo "App was destroyed by monkey and crashed!" >> ~/Desktop/$app/$logname
   mv ~/Desktop/$app/$logname ~/Desktop/$app/CRASH-$logname
   echo "Log saved to ~/Desktop/$app: CRASH-"$logname

elif grep -q "RESPONDING" ~/Desktop/$app/$logname ; then
   echo ' __    __
 \ \  / /
  \ \/ /   
   |  |    App frozen, test failed!
  / /\ \ 
 /_/  \_\
'
   echo "---------------------------" >> ~/Desktop/$app/$logname
   echo "App was destroyed by monkey and stopped responding!" >> ~/Desktop/$app/$logname
   mv ~/Desktop/$app/$logname ~/Desktop/$app/FREEZE-$logname
   echo "Log saved to ~/Desktop/$app: FREEZE-"$logname

elif grep -q "Events" ~/Desktop/$app/$logname ; then
   echo "        __
       / /
      / / 
 __  / /   App survived, test passed!
 \ \/ /   
  \__/    
"
   echo "---------------------------" >> ~/Desktop/$app/$logname
   echo "App survived monkey madness!" >> ~/Desktop/$app/$logname
   rm -rf ~/Desktop/$app

else
   echo "  ____ 
 |__  \ 
    ) |
   / /     Monkey was killed in action!
  |_|
  (_)  
"
   echo "---------------------------" >> ~/Desktop/$app/$logname
   echo "Monkey was killed in action!" >> ~/Desktop/$app/$logname
   mv ~/Desktop/$app/$logname ~/Desktop/$app/KILLED-$logname
   echo "Log saved to ~/Desktop/$app: KILLED-"$logname
fi
echo "---------------------------"



