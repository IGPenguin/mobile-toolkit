#!/bin/bash
LOCATION=$(dirname "$0")
source "$LOCATION"/../common_tools
trap 'ctrlc' 1 2 3 6 15

ctrlc(){
  if $RUNNING_TESTS; then
    MONKEY_TASK_ID=$(adb -s "$SELECTED_DEVICE" shell pidof "com.android.commands.monkey")
    adb -s "$SELECTED_DEVICE" shell kill "$MONKEY_TASK_ID" >/dev/null 2>&1
    echo "üî™ Test monkey terminated, the device is safe to use now!"
  fi

  unlock_app_fullscreen
  exit 2
}

unlock_app_fullscreen(){
  adb -s "$SELECTED_DEVICE" shell am task lock stop >/dev/null 2>&1
  echo "üîì App fullscreen pinning disabled"
}

update_package_name(){
  APP_PACKAGE_NAME="$(android_get_foreground_package "$1")"
}

lock_task_fullscreen(){
  #The following code does not work, the app must be a device owner
  #android_unlock_device "$SELECTED_DEVICE" 3
  #TASK_ID=$(adb -s "$1" shell pidof "$APP_PACKAGE_NAME")
  #adb -s "$1" shell am task lock "$TASK_ID"

  #Manual workaround
  adb -s "$SELECTED_DEVICE" shell am start -a android.settings.SECURITY_SETTINGS >/dev/null 2>&1
  read -r -p "üîë Enable \"Screen pinning\" option in security settings, then press enter..." #TODO add check if already on
  adb -s "$SELECTED_DEVICE" shell monkey -p "$APP_PACKAGE_NAME" -c android.intent.category.LAUNCHER 1 &> /dev/null
  adb -s "$SELECTED_DEVICE" shell input keyevent "KEYCODE_APP_SWITCH"
  read -r -p "üìå Press the \"Pin\" button in \"$APP_PACKAGE_NAME\" window, then press enter... " #TODO add check if already on
  tput setaf 3 && should_proceed "üî• DANGER ZONE ‚äó Start test monkey in "$APP_PACKAGE_NAME"? (it will take a while)" && tput sgr0 #set red and white text color
}

run_test(){
  SEED="$2"
  echo "üêí Running monkey stress test... (press ctrl^c to end now)"
  RUNNING_TESTS=true
  LOG_FILE=~/Desktop/"monkey-test-log-seed-$SEED-$APP_PACKAGE_NAME-$MANUFACTURER-$MODEL-API$SDK-$(date +%Y-%m-%d-%H-%M-%S).txt"
  adb -s "$1" shell monkey -p "$APP_PACKAGE_NAME" -s "$SEED" --pct-appswitch 0 --pct-syskeys 0 --pct-anyevent 0 "$EVENT_COUNT" &> "$LOG_FILE"
  unlock_app_fullscreen "$@"
  grep -q "CRASH" "$LOG_FILE" && tput setaf 1 && echo "‚ùå Test failed, see crash log for details, seed: $SEED" && tput sgr0 && open "$LOG_FILE" && exit 1
  tput setaf 2 && echo "‚úÖ Test passed, successfully executed all input events, seed: $SEED" && tput sgr0
}

RUNNING_TESTS=false
EVENT_COUNT=13000 #Hmm, feels long just enough
SEED="$RANDOM"

android_choose_device
android_device_info "$SELECTED_DEVICE"
update_package_name "$SELECTED_DEVICE"
lock_task_fullscreen "$SELECTED_DEVICE"

case "$1" in #if $1 not number, LOL
    ''|*[!0-9]*) ;; #nothing left to do
    *) SEED="$1" ;;
esac

run_test "$SELECTED_DEVICE" "$SEED"
